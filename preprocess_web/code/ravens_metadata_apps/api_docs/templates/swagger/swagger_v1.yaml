---
swagger: "2.0"
info:
  description: "Initial endpoints for TwoRavens preprocess service."
  version: "1.0.0"
  title: "TwoRavens preprocess service doc"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "raman_prasad@harvard.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "{{ SWAGGER_HOST }}"
#basePath: "/api/v1"
tags:
- name: "preprocess"
  description: "Retrieve SavedWorkspace information"
schemes:
- "http"
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: api-key
paths:
  {% url 'api_process_single_file' %}:
    post:
      security:
        - apiKey: []
      tags:
        - "preprocess"
      summary: "Preprocess a single file. (Note!: Currently the callback_url is needed to finish the process)"
      description: "Preprocess a single .csv or .tab file."
      produces:
        - "application/json"
      consumes:
        - multipart/form-data
      parameters:
        - name: source_file
          in: formData
          type: file
          description: The file to upload.
        #- name: Authorization
        #  in: header
        #  description: an authorization header
        #  required: true
        #  type: string
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            $ref: "#/definitions/UserSuccessMessageWithCallback"
        400:
          description: "An error occurred.  See details in the response."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"
        401:
          description: "A valid API key is needed."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"
  /preprocess/api/metadata/{preprocess_id}:
    get:
      tags:
       - "preprocess"
      summary: "Retrieve preprocess metadata in JSON format"
      description: "Retrieve preprocess metadata in JSON format"
      produces:
       - "application/json"
      parameters:
        - in: path
          name: preprocess_id
          schema:
            type: integer
            required: true
            description: Numeric ID of the preprocess metadata file
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            $ref: "#/definitions/PreprocessData"
        400:
          description: "An error occurred.  See details in the response."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"
        401:
          description: "A valid API key is needed."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"
  {% url 'view_api_retrieve_rows' %}:
    post:
      tags:
      - "preprocess"
      summary: "Retrieve rows from the source file"
      description: "Optional: specify the start_row, num_rows, and format \
        \ (json or csv)"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: message
        description: Message to send
        schema:
          $ref: "#/definitions/RetrieveRowsInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            $ref: "#/definitions/UserSuccessMessage"
        400:
          description: "Error with the registration.  See details in the response."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"

  {% url 'api_update_metadata' %}:
    post:
      tags:
      - "preprocess"
      summary: "Update the preprocess metadata"
      description: "Update the selected variable values or the 'variable_display' \
      \ section."
      produces:
        - "application/json"
      parameters:
        - in: body
          name: message
          description:  to send
          schema:
            $ref: "#/definitions/RetrieveRowsInput"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            $ref: "#/definitions/UserSuccessMessage"
        400:
          description: "Error with the registration.  See details in the response."
          schema:
            type: "object"
            $ref: "#/definitions/UserErrorMessage"
# ------------------------------
# Define reusable parameters:
# ------------------------------
definitions:
{% include "swagger/v1_defn_basic.yaml" %}
{% comment %}
{% include "swagger/v1_defn_workspaces.yaml" %}
{% include "swagger/v1_defn_ta2.yaml" %}
{% endcomment %}
